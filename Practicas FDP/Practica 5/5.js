/*

                 *¬¥¬®) 
                ¬∏.‚Ä¢¬¥ ¬∏.‚Ä¢¬¥¬∏.‚Ä¢*¬¥¬®) ¬∏.‚Ä¢*¬®) 
                (¬∏.‚Ä¢¬¥ (¬∏.‚Ä¢` ¬§ ùï≠ùñóùñÜùñìùñâùñîùñì ùïÆùñÜùñëùñâùñäùñóùñîùñì ùïªùñóùñéùñäùñôùñî  
       .---.         
      /     \   ùñàùñÜùñëùñâùñäùñóùñîùñì.ùñáùñóùñÜùñìùñâùñîùñì@ùñàùñîùñóùñóùñäùñîùñöùñìùñéùñõùñÜùñëùñëùñä.ùñäùñâùñö.ùñàùñî      
      \.@-@./               
      /`\_/`\               202125974
     //  _  \\        
    | \     )|_        ùï¥ùñìùñåùñäùñìùñéùñäùñóùñéùñÜ ùñâùñä ùñòùñéùñòùñôùñäùñíùñÜùñò
   /`\_`>  <_/ \
   \__/'---'\__/

*/

/*

Prop√≥sito: Hacer la representaci√≥n en la suma de una multiplicaci√≥n de "b" veces un numero "a" o viceversa.
Contrato:  number, number -> number
Prototipo: multiplicacionR(number, number)
Ejemplos: 
(3, 4)    -> 12
(102, 17) -> 1734

*/

function multiplicacionR(a, b) {
    if (b == 1) {
        return a;
    } else {
        return a + multiplicacionR(a, b - 1); // Por definici√≥n la multiplication es sumas consecutivas
    }
}

console.log(multiplicacionR(3, 4));
console.log(multiplicacionR(102, 17));
console.log(multiplicacionR(32, 114));
