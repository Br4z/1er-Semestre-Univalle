/*

                 *¬¥¬®) 
                ¬∏.‚Ä¢¬¥ ¬∏.‚Ä¢¬¥¬∏.‚Ä¢*¬¥¬®) ¬∏.‚Ä¢*¬®) 
                (¬∏.‚Ä¢¬¥ (¬∏.‚Ä¢` ¬§ ùï≠ùñóùñÜùñìùñâùñîùñì ùïÆùñÜùñëùñâùñäùñóùñîùñì ùïªùñóùñéùñäùñôùñî  
       .---.         
      /     \   ùñàùñÜùñëùñâùñäùñóùñîùñì.ùñáùñóùñÜùñìùñâùñîùñì@ùñàùñîùñóùñóùñäùñîùñöùñìùñéùñõùñÜùñëùñëùñä.ùñäùñâùñö.ùñàùñî      
      \.@-@./               
      /`\_/`\               202125974
     //  _  \\        
    | \     )|_        ùï¥ùñìùñåùñäùñìùñéùñäùñóùñéùñÜ ùñâùñä ùñòùñéùñòùñôùñäùñíùñÜùñò
   /`\_`>  <_/ \
   \__/'---'\__/

*/

/*

Prop√≥sito: Determinar si el numero es primo.
Contrato:  number -> boolean
Prototipo: primo(number)
Ejemplos: 
(2)  -> true
(30) -> false

*/

function primo(n) {
    // Estamos descartando los m√∫ltiplos de 2 y 5 (para los casos de prueba funciona)
    if (n == 2 || n == 5) {
        return true;
    } else if (n % 2 == 0 || n % 5 == 0) {
        return false;
    } else {
        return true;
    }
}

console.log(primo(2));
console.log(primo(30));
console.log(primo(5));
console.log(primo(17));
console.log(primo(4));
