/*

                 *¬¥¬®) 
                ¬∏.‚Ä¢¬¥ ¬∏.‚Ä¢¬¥¬∏.‚Ä¢*¬¥¬®) ¬∏.‚Ä¢*¬®) 
                (¬∏.‚Ä¢¬¥ (¬∏.‚Ä¢` ¬§ ùï≠ùñóùñÜùñìùñâùñîùñì ùïÆùñÜùñëùñâùñäùñóùñîùñì ùïªùñóùñéùñäùñôùñî  
       .---.         
      /     \   ùñàùñÜùñëùñâùñäùñóùñîùñì.ùñáùñóùñÜùñìùñâùñîùñì@ùñàùñîùñóùñóùñäùñîùñöùñìùñéùñõùñÜùñëùñëùñä.ùñäùñâùñö.ùñàùñî      
      \.@-@./               
      /`\_/`\               202125974
     //  _  \\        
    | \     )|_        ùï¥ùñìùñåùñäùñìùñéùñäùñóùñéùñÜ ùñâùñä ùñòùñéùñòùñôùñäùñíùñÜùñò
   /`\_`>  <_/ \
   \__/'---'\__/

*/

/*

Prop√≥sito: Comprobar si el a√±o dado es bisiesto. 
Contrato:  number, number -> boolean
Prototipo: bisiesto(number,number)
Ejemplos: 
(2004) -> true
(2028) -> true

*/

/*

Un a√±o es bisiesto en el calendario Gregoriano, si :
- Es divisible entre 4 y no divisible entre 100 
o
- Es divisible entre 400.

*/

function bisiesto(year) {
    if (year % 4 == 0 && year % 100 != 0) { // Si es divisible entre 4, pero no entre 100 no es bisiesto
        return true;
    } else if (year % 400 == 0) { // Es divisible entre 400
        return true;
    } else {
        return false;
    }
}

console.log(bisiesto(2004));
console.log(bisiesto(2028));
console.log(bisiesto(2021));
console.log(bisiesto(2016));
console.log(bisiesto(2020));
console.log(bisiesto(2032));
console.log(bisiesto(2007));
console.log(bisiesto(2012));
console.log(bisiesto(2036));
