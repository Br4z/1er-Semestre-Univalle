'''
                 *¬¥¬®) 
                ¬∏.‚Ä¢¬¥ ¬∏.‚Ä¢¬¥¬∏.‚Ä¢*¬¥¬®) ¬∏.‚Ä¢*¬®) 
                (¬∏.‚Ä¢¬¥ (¬∏.‚Ä¢` ¬§ ùï≠ùñóùñÜùñìùñâùñîùñì ùïÆùñÜùñëùñâùñäùñóùñîùñì ùïªùñóùñéùñäùñôùñî  
       .---.         
      /     \   ùñàùñÜùñëùñâùñäùñóùñîùñì.ùñáùñóùñÜùñìùñâùñîùñì@ùñàùñîùñóùñóùñäùñîùñöùñìùñéùñõùñÜùñëùñëùñä.ùñäùñâùñö.ùñàùñî      
      \.@-@./               
      /`\_/`\               202125974
     //  _  \\        
    | \     )|_        ùï¥ùñìùñåùñäùñìùñéùñäùñóùñéùñÜ ùñâùñä ùñòùñéùñòùñôùñäùñíùñÜùñò
   /`\_`>  <_/ \
   \__/'---'\__/

'''

import time
import sys # Libreria para manipular el m√°ximo de la pila en phyton

def factorial(n):
    respuesta = 1
    while n > 1:
        respuesta *= n
        n -= 1
    return respuesta


def factorial_r(n):
    if n == 1:
        return 1
    return n * factorial_r(n - 1)


if __name__ == '__main__':
    n = 1000
    sys.setrecursionlimit(n + 10) # Aca establecemos un tama√±o variable en la pila, dependiendo de que n se escoge

    comienzo = time.time()
    factorial(n)
    final = time.time()
    print(final - comienzo)

    comienzo = time.time()
    factorial_r(n)
    final = time.time()
    print(final - comienzo)